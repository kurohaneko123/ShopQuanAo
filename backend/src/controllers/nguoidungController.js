import jwt from "jsonwebtoken";
import dotenv from "dotenv";
import {
    taoNguoiDung,
    timNguoiDungTheoEmail,
    kiemTraMatKhau,
} from "../models/nguoidungModel.js";

dotenv.config();

// üß† H√†m t·∫°o token JWT
const taoToken = (nguoidung) => {
    return jwt.sign(
        {
            id: nguoidung.manguoidung,
            email: nguoidung.email,
            vaitro: nguoidung.vaitro,
        },
        process.env.JWT_SECRET,
        { expiresIn: process.env.JWT_EXPIRES || "7d" }
    );
};

// üü¢ ƒêƒÉng k√Ω ng∆∞·ªùi d√πng
export const dangKyNguoiDung = async (req, res) => {
    try {
        const { email, matkhau, hoten, sodienthoai } = req.body;
        if (!email || !matkhau)
            return res.status(400).json({ message: "Thi·∫øu email ho·∫∑c m·∫≠t kh·∫©u." });

        await taoNguoiDung({ email, matkhau, hoten, sodienthoai });

        const nguoidung = await timNguoiDungTheoEmail(email);
        const token = taoToken(nguoidung);

        res.status(201).json({
            message: "ƒêƒÉng k√Ω th√†nh c√¥ng!",
            nguoidung: {
                manguoidung: nguoidung.manguoidung,
                email: nguoidung.email,
                hoten: nguoidung.hoten,
                vaitro: nguoidung.vaitro,
            },
            token,
        });
    } catch (error) {
        res.status(400).json({ message: error.message });
    }
};

// üü£ ƒêƒÉng nh·∫≠p ng∆∞·ªùi d√πng
export const dangNhapNguoiDung = async (req, res) => {
    try {
        const { email, matkhau } = req.body;
        if (!email || !matkhau)
            return res.status(400).json({ message: "Thi·∫øu th√¥ng tin ƒëƒÉng nh·∫≠p." });

        const nguoidung = await timNguoiDungTheoEmail(email);
        if (!nguoidung)
            return res.status(404).json({ message: "Email kh√¥ng t·ªìn t·∫°i." });

        const hopLe = await kiemTraMatKhau(matkhau, nguoidung.matkhau);
        if (!hopLe)
            return res.status(401).json({ message: "M·∫≠t kh·∫©u kh√¥ng ƒë√∫ng." });

        const token = taoToken(nguoidung);

        res.json({
            message: "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!",
            nguoidung: {
                manguoidung: nguoidung.manguoidung,
                email: nguoidung.email,
                hoten: nguoidung.hoten,
                sodienthoai: nguoidung.sodienthoai,
                vaitro: nguoidung.vaitro,
            },
            token,
        });
    } catch (error) {
        console.error("‚ùå L·ªói ƒëƒÉng nh·∫≠p:", error.message);
        res.status(500).json({ message: "L·ªói m√°y ch·ªß khi ƒëƒÉng nh·∫≠p." });
    }
};
// üü¢ L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ token (API b·∫£o v·ªá)
export const layThongTinCaNhan = async (req, res) => {
    try {
        const user = req.nguoidung; // middleware xacthucToken s·∫Ω g√°n v√†o req.nguoidung
        res.json({
            message: "L·∫•y th√¥ng tin ng∆∞·ªùi d√πng th√†nh c√¥ng!",
            nguoidung: user,
        });
    } catch (error) {
        console.error("‚ùå L·ªói l·∫•y th√¥ng tin c√° nh√¢n:", error);
        res.status(500).json({ message: "L·ªói m√°y ch·ªß khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng." });
    }
};

